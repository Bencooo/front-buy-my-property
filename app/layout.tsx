/*import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { ThirdwebProvider } from "thirdweb/react";
import Header from "./components/header/header";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ThirdwebProvider>
        <Header />
          {children}
        </ThirdwebProvider>
      </body>
    </html>
  );
}*/

"use client";

import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";

// ---- Wagmi ----
import { WagmiProvider } from "wagmi";
import { config } from "./lib/config"; // chemin vers votre fichier config

// ---- Thirdweb ----
import { ThirdwebProvider } from "thirdweb/react";
import Header from "./components/header/header";

// ------ React Query ------
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";

// Polices locales (optionnel)
const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

const queryClient = new QueryClient();


export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <QueryClientProvider client={queryClient}>
        {/* WagmiProvider + config */}
        <WagmiProvider config={config}>
          {/* ThirdwebProvider (si vous conservez Thirdweb pour la connexion wallet) */}
          <ThirdwebProvider>
            <Header />
            {children}
          </ThirdwebProvider>
        </WagmiProvider>
        </QueryClientProvider>
      </body>
    </html>
  );
}
